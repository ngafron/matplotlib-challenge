
# Dependencies and Setup
%matplotlib inline
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
​
# Hide warning messages in notebook
import warnings
warnings.filterwarnings('ignore')
​
# File to Load (Remember to Change These)
mouse_drugs = "data/mouse_drug_data.csv"
clinical_trials = "data/clinicaltrial_data.csv"
​
# Read the Mouse and Drug Data and the Clinical Trial Data
md_df = pd.read_csv(mouse_drugs)
ct_df = pd.read_csv(clinical_trials)
​
# Combine the data into a single dataset
df = pd.merge(md_df, ct_df, how='outer', on='Mouse ID')
​
# Display the data table for preview
df.head()
Mouse ID	Drug	Timepoint	Tumor Volume (mm3)	Metastatic Sites
0	f234	Stelasyn	0	45.000000	0
1	f234	Stelasyn	5	47.313491	0
2	f234	Stelasyn	10	47.904324	0
3	f234	Stelasyn	15	48.735197	1
4	f234	Stelasyn	20	51.112713	2
Tumor Response to Treatment
TR_df = pd.DataFrame({
    'Drug': df['Drug'],
    'Timepoint': df['Timepoint'],
    'Volume': df['Tumor Volume (mm3)']
})
TRgroup_df = TR_df.groupby(('Drug', 'Timepoint'), as_index=False)
TR_mean_df = TRgroup_df.mean()
TR_mean_df.head()
# Store the Mean Tumor Volume Data Grouped by Drug and Timepoint 
TR_df = pd.DataFrame({
    'Drug': df['Drug'],
    'Timepoint': df['Timepoint'],
    'Volume': df['Tumor Volume (mm3)']
})
TRgroup_df = TR_df.groupby(('Drug', 'Timepoint'), as_index=False)
TR_mean_df = TRgroup_df.mean()
TR_mean_df.head()
# Convert to DataFrame
# Preview DataFrame
​
Drug	Timepoint	Volume
0	Capomulin	0	45.000000
1	Capomulin	5	44.266086
2	Capomulin	10	43.084291
3	Capomulin	15	42.064317
4	Capomulin	20	40.716325
TR_SE_df = TR_df.groupby(['Drug', 'Timepoint']).sem()
# Convert to DataFrame
TR_SE_df = pd.DataFrame(TR_SE_df.reset_index())
# Preview DataFrame
TR_SE_df.head()
# Store the Standard Error of Tumor Volumes Grouped by Drug and Timepoint
TR_SE_df = TR_df.groupby(['Drug', 'Timepoint']).sem()
# Convert to DataFrame
TR_SE_df = pd.DataFrame(TR_SE_df.reset_index())
# Preview DataFrame
TR_SE_df.head()
​
Drug	Timepoint	Volume
0	Capomulin	0	0.000000
1	Capomulin	5	0.448593
2	Capomulin	10	0.702684
3	Capomulin	15	0.838617
4	Capomulin	20	0.909731
Drug_mean_df = TR_mean_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Volume')
Drug_SE_df = TR_SE_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Volume')
# # Preview that Reformatting worked
Drug_mean_df.head()
# Minor Data Munging to Re-Format the Data Frames
Drug_mean_df = TR_mean_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Volume')
Drug_SE_df = TR_SE_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Volume')
# # Preview that Reformatting worked
Drug_mean_df.head()
Drug	Capomulin	Ceftamin	Infubinol	Ketapril	Naftisol	Placebo	Propriva	Ramicane	Stelasyn	Zoniferol
Timepoint										
0	45.000000	45.000000	45.000000	45.000000	45.000000	45.000000	45.000000	45.000000	45.000000	45.000000
5	44.266086	46.503051	47.062001	47.389175	46.796098	47.125589	47.248967	43.944859	47.527452	46.851818
10	43.084291	48.285125	49.403909	49.582269	48.694210	49.423329	49.101541	42.531957	49.463844	48.689881
15	42.064317	50.094055	51.296397	52.399974	50.933018	51.359742	51.067318	41.495061	51.529409	50.779059
20	40.716325	52.157049	53.197691	54.920935	53.644087	54.364417	53.346737	40.238325	54.067395	53.170334
head()
Drug_SE_df.head()
Drug	Capomulin	Ceftamin	Infubinol	Ketapril	Naftisol	Placebo	Propriva	Ramicane	Stelasyn	Zoniferol
Timepoint										
0	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000
5	0.448593	0.164505	0.235102	0.264819	0.202385	0.218091	0.231708	0.482955	0.239862	0.188950
10	0.702684	0.236144	0.282346	0.357421	0.319415	0.402064	0.376195	0.720225	0.433678	0.263949
15	0.838617	0.332053	0.357705	0.580268	0.444378	0.614461	0.466109	0.770432	0.493261	0.370544
20	0.909731	0.359482	0.476210	0.726484	0.595260	0.839609	0.555181	0.786199	0.621889	0.533182
plt.xlabel("Time (Days)")
plt.ylabel("Average Volume of Tumor (mm3)")
plt.title("Tumor Response to Treatment")
plt.grid=True

plt.errorbar(Timepoint, Capo_mean, Capo_SE, marker ='o',  color="red", label="Capomulin")
plt.errorbar(Timepoint, Ceft_mean, Ceft_SE, marker ='v', color="green", label="Ceftamin")
plt.errorbar(Timepoint, Infu_mean, Infu_SE, marker ='s', color="blue", label="Infubinol")
plt.errorbar(Timepoint, Keta_mean, Keta_SE, marker ='d', color="purple", label="Ketapril")
plt.errorbar(Timepoint, Naft_mean, Naft_SE, marker ='o', color="yellow", label="Naftisol")
plt.errorbar(Timepoint, Plac_mean, Plac_SE, color="green", label="Placebo")
# Generate the Plot (with Error Bars)
# Capomulin Ceftamin    Infubinol   Ketapril    Naftisol    Placebo Propriva    Ramicane    Stelasyn    Zoniferol
Drugs = Drug_mean_df.keys()
Timepoint = Drug_mean_df.index
​
Capo_mean = Drug_mean_df.loc[:, ['Capomulin']]
Capo_mean = Capo_mean['Capomulin']
Capo_SE = Drug_SE_df.loc[:, ['Capomulin']]
Capo_SE = Capo_SE['Capomulin']
​
Ceft_mean = Drug_mean_df.loc[:, ['Ceftamin']]
Ceft_mean = Ceft_mean['Ceftamin']
Ceft_SE = Drug_SE_df.loc[:, ['Ceftamin']]
Ceft_SE = Ceft_SE['Ceftamin']
​
Infu_mean = Drug_mean_df.loc[:, ['Infubinol']]
Infu_mean = Infu_mean['Infubinol']
Infu_SE = Drug_SE_df.loc[:, ['Infubinol']]
Infu_SE = Infu_SE['Infubinol']
​
Keta_mean = Drug_mean_df.loc[:, ['Ketapril']]
Keta_mean = Keta_mean['Ketapril']
Keta_SE = Drug_SE_df.loc[:, ['Ketapril']]
Keta_SE = Keta_SE['Ketapril']
​
Naft_mean = Drug_mean_df.loc[:, ['Naftisol']]
Naft_mean = Naft_mean['Naftisol']
Naft_SE = Drug_SE_df.loc[:, ['Naftisol']]
Naft_SE = Naft_SE['Naftisol']
​
Plac_mean = Drug_mean_df.loc[:, ['Placebo']]
Plac_mean = Plac_mean['Placebo']
Plac_SE = Drug_SE_df.loc[:, ['Placebo']]
Plac_SE = Plac_SE['Placebo']
​
Prop_mean = Drug_mean_df.loc[:, ['Propriva']]
Prop_mean = Prop_mean['Propriva']
Prop_SE = Drug_SE_df.loc[:, ['Propriva']]
Prop_SE = Prop_SE['Propriva']
​
Rami_mean = Drug_mean_df.loc[:, ['Ramicane']]
Rami_mean = Rami_mean['Ramicane']
Rami_SE = Drug_SE_df.loc[:, ['Ramicane']]
Rami_SE = Rami_SE['Ramicane']
​
Stel_mean = Drug_mean_df.loc[:, ['Stelasyn']]
Stel_mean = Stel_mean['Stelasyn']
Stel_SE = Drug_SE_df.loc[:, ['Stelasyn']]
Stel_SE = Stel_SE['Stelasyn']
​
Zoni_mean = Drug_mean_df.loc[:, ['Zoniferol']]
Zoni_mean = Zoni_mean['Zoniferol']
Zoni_SE = Drug_SE_df.loc[:, ['Zoniferol']]
Zoni_SE = Zoni_SE['Zoniferol']
​
plt.xlabel("Time (Days)")
plt.ylabel("Average Volume of Tumor (mm3)")
plt.title("Tumor Response to Treatment")
plt.grid=True
​
plt.errorbar(Timepoint, Capo_mean, Capo_SE, marker ='o',  color="red", label="Capomulin")
plt.errorbar(Timepoint, Ceft_mean, Ceft_SE, marker ='v', color="green", label="Ceftamin")
plt.errorbar(Timepoint, Infu_mean, Infu_SE, marker ='s', color="blue", label="Infubinol")
plt.errorbar(Timepoint, Keta_mean, Keta_SE, marker ='d', color="purple", label="Ketapril")
plt.errorbar(Timepoint, Naft_mean, Naft_SE, marker ='o', color="yellow", label="Naftisol")
plt.errorbar(Timepoint, Plac_mean, Plac_SE, color="green", label="Placebo")
# plt.errorbar(Timepoint, Prop_mean, Prop_SE, color="green", label="Propriva")
# plt.errorbar(Timepoint, Rami_mean, Rami_SE, color="green", label="Ramicane")
# plt.errorbar(Timepoint, Stel_mean, Stel_SE, color="green", label="Stelasyn")
# plt.errorbar(Timepoint, Zoni_mean, Zoni_SE, color="green", label="Zoniferol")
​
# Save the Figure
plt.show()
​
​

# Show the Figure
plt.show()
​
Tumor Response to Treatment

Metastatic Response to Treatment
MS_df = pd.DataFrame({
    'Drug': df['Drug'],
    'Timepoint': df['Timepoint'],
    'Metastatic Sites': df['Metastatic Sites']
})
# Store the Mean Met. Site Data Grouped by Drug and Timepoint 
MS_df = pd.DataFrame({
    'Drug': df['Drug'],
    'Timepoint': df['Timepoint'],
    'Metastatic Sites': df['Metastatic Sites']
})
MSgroup_df = MS_df.groupby(('Drug', 'Timepoint'), as_index=False)
MS_mean_df = MSgroup_df.mean()
MS_mean_df.head()
# Convert to DataFrame
​
# Preview DataFrame
​
Drug	Timepoint	Metastatic Sites
0	Capomulin	0	0.000000
1	Capomulin	5	0.160000
2	Capomulin	10	0.320000
3	Capomulin	15	0.375000
4	Capomulin	20	0.652174
# Store the Standard Error associated with Met. Sites Grouped by Drug and Timepoint 
MS_SE_df = MS_df.groupby(['Drug', 'Timepoint']).sem()
# Convert to DataFrame
MS_SE_df = pd.DataFrame(MS_SE_df.reset_index())
# Preview DataFrame
MS_SE_df.head()
Drug	Timepoint	Metastatic Sites
0	Capomulin	0	0.000000
1	Capomulin	5	0.074833
2	Capomulin	10	0.125433
3	Capomulin	15	0.132048
4	Capomulin	20	0.161621
MS_mean_df = MS_mean_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Metastatic Sites')
# Minor Data Munging to Re-Format the Data Frames
MS_mean_df = MS_mean_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Metastatic Sites')
MS_SE_df = MS_SE_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Metastatic Sites')
# # Preview that Reformatting worked
MS_mean_df.head()
Drug	Capomulin	Ceftamin	Infubinol	Ketapril	Naftisol	Placebo	Propriva	Ramicane	Stelasyn	Zoniferol
Timepoint										
0	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000
5	0.160000	0.380952	0.280000	0.304348	0.260870	0.375000	0.320000	0.120000	0.240000	0.166667
10	0.320000	0.600000	0.666667	0.590909	0.523810	0.833333	0.565217	0.250000	0.478261	0.500000
15	0.375000	0.789474	0.904762	0.842105	0.857143	1.250000	0.764706	0.333333	0.782609	0.809524
20	0.652174	1.111111	1.050000	1.210526	1.150000	1.526316	1.000000	0.347826	0.952381	1.294118
SE
MS_SE_df.head()
Drug	Capomulin	Ceftamin	Infubinol	Ketapril	Naftisol	Placebo	Propriva	Ramicane	Stelasyn	Zoniferol
Timepoint										
0	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000	0.000000
5	0.074833	0.108588	0.091652	0.098100	0.093618	0.100947	0.095219	0.066332	0.087178	0.077709
10	0.125433	0.152177	0.159364	0.142018	0.163577	0.115261	0.105690	0.090289	0.123672	0.109109
15	0.132048	0.180625	0.194015	0.191381	0.158651	0.190221	0.136377	0.115261	0.153439	0.111677
20	0.161621	0.241034	0.234801	0.236680	0.181731	0.234064	0.171499	0.119430	0.200905	0.166378
Capo_mean = MS_mean_df.loc[:, ['Capomulin']]
Capo_mean = Capo_mean['Capomulin']
Capo_SE = MS_SE_df.loc[:, ['Capomulin']]
Capo_SE = Capo_SE['Capomulin']

Ceft_mean = MS_mean_df.loc[:, ['Ceftamin']]
Ceft_mean = Ceft_mean['Ceftamin']
Ceft_SE = MS_SE_df.loc[:, ['Ceftamin']]
Ceft_SE = Ceft_SE['Ceftamin']

Infu_mean = MS_mean_df.loc[:, ['Infubinol']]
Infu_mean = Infu_mean['Infubinol']
Infu_SE = MS_SE_df.loc[:, ['Infubinol']]
Infu_SE = Infu_SE['Infubinol']

Keta_mean = MS_mean_df.loc[:, ['Ketapril']]
Keta_mean = Keta_mean['Ketapril']
Keta_SE = MS_SE_df.loc[:, ['Ketapril']]
Keta_SE = Keta_SE['Ketapril']

Naft_mean = MS_mean_df.loc[:, ['Naftisol']]
Naft_mean = Naft_mean['Naftisol']
Naft_SE = MS_SE_df.loc[:, ['Naftisol']]
Naft_SE = Naft_SE['Naftisol']

Plac_mean = MS_mean_df.loc[:, ['Placebo']]
Plac_mean = Plac_mean['Placebo']
Plac_SE = MS_SE_df.loc[:, ['Placebo']]
Plac_SE = Plac_SE['Placebo']
# Generate the Plot (with Error Bars)
Capo_mean = MS_mean_df.loc[:, ['Capomulin']]
Capo_mean = Capo_mean['Capomulin']
Capo_SE = MS_SE_df.loc[:, ['Capomulin']]
Capo_SE = Capo_SE['Capomulin']
​
Ceft_mean = MS_mean_df.loc[:, ['Ceftamin']]
Ceft_mean = Ceft_mean['Ceftamin']
Ceft_SE = MS_SE_df.loc[:, ['Ceftamin']]
Ceft_SE = Ceft_SE['Ceftamin']
​
Infu_mean = MS_mean_df.loc[:, ['Infubinol']]
Infu_mean = Infu_mean['Infubinol']
Infu_SE = MS_SE_df.loc[:, ['Infubinol']]
Infu_SE = Infu_SE['Infubinol']
​
Keta_mean = MS_mean_df.loc[:, ['Ketapril']]
Keta_mean = Keta_mean['Ketapril']
Keta_SE = MS_SE_df.loc[:, ['Ketapril']]
Keta_SE = Keta_SE['Ketapril']
​
Naft_mean = MS_mean_df.loc[:, ['Naftisol']]
Naft_mean = Naft_mean['Naftisol']
Naft_SE = MS_SE_df.loc[:, ['Naftisol']]
Naft_SE = Naft_SE['Naftisol']
​
Plac_mean = MS_mean_df.loc[:, ['Placebo']]
Plac_mean = Plac_mean['Placebo']
Plac_SE = MS_SE_df.loc[:, ['Placebo']]
Plac_SE = Plac_SE['Placebo']
# Save the Figure
​
# Show the Figure
plt.xlabel("Treatment Duration (Days)")
plt.ylabel("Met. Sites")
plt.title("Metastatic Spead During Treatment")
plt.grid=True
​
plt.errorbar(Timepoint, Capo_mean, Capo_SE, marker ='o',  color="red", label="Capomulin")
plt.errorbar(Timepoint, Ceft_mean, Ceft_SE, marker ='v', color="green", label="Ceftamin")
plt.errorbar(Timepoint, Infu_mean, Infu_SE, marker ='s', color="blue", label="Infubinol")
plt.errorbar(Timepoint, Keta_mean, Keta_SE, marker ='d', color="purple", label="Ketapril")
plt.errorbar(Timepoint, Naft_mean, Naft_SE, marker ='o', color="yellow", label="Naftisol")
plt.errorbar(Timepoint, Plac_mean, Plac_SE, color="green", label="Placebo")
​
plt.show()

Survival Rates
# Store the Count of Mice Grouped by Drug and Timepoint (W can pass any metric)
Mice_df = pd.DataFrame({
    'Drug': df['Drug'],
    'Timepoint': df['Timepoint'],
    'Mouse ID': df['Mouse ID']
})
Micegroup_df = Mice_df.groupby(('Drug', 'Timepoint'), as_index=False)
Mice_count_df = Micegroup_df.count()
Mice_count_df['Survival Rate'] = ((Mice_count_df['Mouse ID']/25) * 100)
# Convert to DataFrame
​
# Preview DataFrame
Mice_count_df.head()
Drug	Timepoint	Mouse ID	Survival Rate
0	Capomulin	0	25	100.0
1	Capomulin	5	25	100.0
2	Capomulin	10	25	100.0
3	Capomulin	15	24	96.0
4	Capomulin	20	23	92.0
Mice_count_
# Minor Data Munging to Re-Format the Data Frames
Mice_df = Mice_count_df.pivot(index = 'Timepoint', columns = 'Drug', values = 'Survival Rate')
# Preview the Data Frame
Mice_df.keys()
Index(['Capomulin', 'Ceftamin', 'Infubinol', 'Ketapril', 'Naftisol', 'Placebo',
       'Propriva', 'Ramicane', 'Stelasyn', 'Zoniferol'],
      dtype='object', name='Drug')
# Generate the Plot (Accounting for percentages)
Capo_SR = Mice_df.loc[:, ['Capomulin']]
Capo_SR = Capo_SR['Capomulin']
​
Ceft_SR = Mice_df.loc[:, ['Ceftamin']]
Ceft_SR = Ceft_SR['Ceftamin']
​
Infu_SR = Mice_df.loc[:, ['Infubinol']]
Infu_SR = Infu_SR['Infubinol']
​
Keta_SR = Mice_df.loc[:, ['Ketapril']]
Keta_SR = Keta_SR['Ketapril']
​
Naft_SR = Mice_df.loc[:, ['Naftisol']]
Naft_SR = Naft_SR['Naftisol']
​
Plac_SR = Mice_df.loc[:, ['Placebo']]
Plac_SR = Plac_SR['Placebo']
​
plt.xlabel("Treatment Duration (Days)")
plt.ylabel("Survival Rate%")
plt.title("Survival During Treatment")
plt.grid=True
​
plt.plot(Timepoint, Capo_SR, marker ='o',  color="red", label="Capomulin")
plt.plot(Timepoint, Ceft_SR, marker ='v', color="green", label="Ceftamin")
plt.plot(Timepoint, Infu_SR, marker ='s', color="blue", label="Infubinol")
plt.plot(Timepoint, Keta_SR, marker ='d', color="purple", label="Ketapril")
plt.plot(Timepoint, Naft_SR, marker ='o', color="yellow", label="Naftisol")
plt.plot(Timepoint, Plac_SR, color="green", label="Placebo")
# Save the Figure
​
# Show the Figure
plt.show()

Summary Bar Graph
# Calculate the percent changes for each drug
Mice_df.head()
​
Change = []
​
for drug in len(Mice_df.keys()):
    change.append((Mice_df.iloc[:0]) - (Mice_df.iloc[:-1])) 
    Capo_SR = Mice_df.loc[:, ['Capomulin']]
    Capo_SR = Capo_SR['Capomulin']
    
Change
​
​
# Display the data to confirm
Drug	Timepoint	Mouse ID	Survival Rate
0	Capomulin	0	25	100.0
1	Capomulin	5	25	100.0
2	Capomulin	10	25	100.0
3	Capomulin	15	24	96.0
4	Capomulin	20	23	92.0
Mice_change_df = Mice_df.iloc[[0, -1]]
Mice_change_df
Drug	Capomulin	Ceftamin	Infubinol	Ketapril	Naftisol	Placebo	Propriva	Ramicane	Stelasyn	Zoniferol
Timepoint										
0	100.0	100.0	100.0	100.0	100.0	100.0	104.0	100.0	104.0	100.0
45	84.0	52.0	36.0	44.0	52.0	44.0	28.0	80.0	44.0	56.0
# Store all Relevant Percent Changes into a Tuple
​
​
# Splice the data between passing and failing drugs
​
​
# Orient widths. Add labels, tick marks, etc. 
​
​
# Use functions to label the percentages of changes
​
​
# Call functions to implement the function calls
​
​
# Save the Figure
​
​
# Show the Figure
fig.show()
Metastatic Spread During Treatment
